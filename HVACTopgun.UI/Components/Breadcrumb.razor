@inject NavigationManager NavigationManager
<nav class="flex" aria-label="Breadcrumb">
    <ol role="list" class="flex items-center space-x-4">
        <li>
            <div>
                <a href="/" class="text-gray-400 hover:text-gray-500">
                    <svg class="h-5 w-5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z" clip-rule="evenodd" />
                    </svg>
                    <span class="sr-only">Home</span>
                </a>
            </div>
        </li>
        @foreach (var item in BreadcrumbItems)
        {
            <li>
                <div class="flex items-center">
                    <svg class="h-5 w-5 flex-shrink-0 text-gray-300" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                        <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                    </svg>
                    <a href="@item.Href" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700">@item.Name</a>
                </div>
            </li>
        }
    </ol>
</nav>

@code {
    private List<BreadcrumbItem> BreadcrumbItems { get; set; } = new List<BreadcrumbItem>();

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var segments = uri.AbsolutePath.Split(new char[] { '/' }, StringSplitOptions.RemoveEmptyEntries);


        string path = "";
       
        foreach (var segment in segments)
        {
            if (segment == "posts")
            {
                BreadcrumbItems.Add(new BreadcrumbItem { Name = "Academy", Href = "/HVACBusinessAcademy" });
                path += "/posts"; // Keep the "posts" segment in the path
            }
            else
            {
                path += "/" + segment;
                var name = TransformSegmentToName(segment);
                BreadcrumbItems.Add(new BreadcrumbItem { Name = name, Href = path });
            }
        }
    }

    private string TransformSegmentToName(string segment)
    {
        var words = segment.Replace("-", " ").Split(' ');
        return string.Join(" ", words.Select(w => char.ToUpper(w[0]) + w.Substring(1)));
    }

    public class BreadcrumbItem
    {
        public string Name { get; set; }
        public string Href { get; set; }
    }
}
    
